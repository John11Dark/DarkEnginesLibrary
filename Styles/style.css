/* global variables */
@media (prefers-color-scheme: dark) {
  /* redefine dark mode colors here */
  :root {
    --primaryColor: #62bde7;
    --primaryColorDark: #181414;
    --primaryColorLight: #fffeff;
    --secondaryColor: #707070;
    --tertiaryColor: #ff424d;
    --CustomTertiaryColor: #b5d4b9;
    --DarkModeOpacity: #0a0a0ae3;
    --backgroundColor: #1d2325;
    --customBackgroundColorDarkMode: #488d9f;
    --backgroundColorOpacity: #1d2325b0;
    --primaryCardColor: #23282ea2;
    --labelColor: #aaa9b6;
  }
}

@media (prefers-color-scheme: light) {
  /* redefine dark mode colors here */
  :root {
    --primaryColor: #62bde7;
    --primaryColorDark: #fffeff;
    --primaryColorLight: #181414;
    --secondaryColor: #707070;
    --tertiaryColor: #ff424d;
    --CustomTertiaryColor: #b5d4b9;
    --DarkModeOpacity: #0a0a0ae3;
    --backgroundColor: #d9e9f1;
    --customBackgroundColorDarkMode: #cbd9df;
    --backgroundColorOpacity: #1d2325b0;
    --primaryCardColor: #e2efffa2;
    --labelColor: #978f8f;
  }
}

:root {
  /* Fonts */
  --primaryFont: "Poppins", sans-serif;
  --secondaryFont: "Montserrat Alternates", sans-serif;
  --tertiaryFont: "Pacifico", cursive;
  --tertiaryFontExtra: "Baloo Da 2", cursive;

  /* Colors */
  /* --primaryColor: #62bde7;
  --primaryColorDark: #181414;
  --primaryColorLight: #fffeff;
  --secondaryColor: #707070;
  --tertiaryColor: #ff424d;
  --CustomTertiaryColor: #b5d4b9;
  --DarkModeOpacity: #0a0a0ae3;
  --backgroundColor: #1d2325;
  --customBackgroundColorDarkMode: #488d9f;
  --backgroundColorOpacity: #1d2325b0;
  --primaryCardColor: #23282ea2; */

  /* box shadows */
  --boxShadowLightBehind: 0 0 2em -1em var(--DarkModeOpacity);
  --boxShadowDarkOut: 0 0 5em 1em var(--DarkModeOpacity);
  --textThreeD: 3px 3px 1px var(--primaryColor);

  /*  */

  --transition-5ms-Ease: all 0.5s ease;
  --transition-backgroundColor-Ease: background-color 0.5s ease;

  /* Sizes */
  --cardBorderRadius: 0.5rem;
  --largeCardBorderRadius: 0.75rem;
  --btnBorderRadius: 0.25rem;
  --searchBarBorderRadius: calc(1rem + 0.25vw + 0.25vh);
  --imageMaxWidth: calc(30vw + 20vh + 10% + 2.5rem);
  --imageMaxHeight: calc(30vh + 20vw + 10% + 2.5rem);
  --imageBorderRadius: calc(0.5rem + var(--cardBorderRadius));
  --cardBorderRadiusThin: 0.25rem;
  --inputBorderRadius: 0.75rem;
  --logoScale: 85%;
  --navScale: 40%;
  --btnFontSize: calc(1rem + 20% + 0.5vw + 0.5vh);
  --navFontSize: calc(0.1rem + 30% + 0.5vw + 0.5vh);
  --paragraphFontSize: calc(0.25rem + 0.25vw + 0.5vh + 25%);
  --HeadFontSize: calc(1em + 0.5vh + 0.5vw);
  --heroSectionTitle: calc(1.5rem + 1vw + 1vh + 25%);
  --headTitleFontSize: calc(90% + 0.75vh + 0.75vw + 0.75rem);
  --headTitleFontSizeLarger: calc(90% + 1vh + 1vw + 1rem);
  --subTitleFontSize: calc(50% + 0.25vh + 0.25vw + 0.25rem);
  --titleFontSize: calc(25% + 0.5vh + 0.5vw + 0.5rem);
  --calcFontSize: calc(80% + 0.5vh + 0.5vw);
  --dateFontSize: calc(1.2rem + 12%);
}

/* 
    *
    *
    Global styling
    *
    *
    */

/* all content */
*,
*::after,
*::before {
  box-sizing: border-box;
  outline: none;
  font: inherit;
  margin: 0;
  padding: 0;
  word-wrap: break-word;
  border: none;
}

/* document and body styling  */
html,
body {
  scroll-behavior: smooth;
  -webkit-font-smoothing: antialiased;
  color-scheme: dark light;
  /*
    color-scheme is to tell the browser that this website supports dark and light mode
    dark is the initial state if the user preference is light mode the the second parameter light mode will take place     
    not supported by FireFox < 96, internet explorer and safari IOS < 13   there is no way to support it if the user preference is light/dark mode
    but if the user has no preference then it will initialed to dark and then changes by toggling the light/dark mode button */
}

/* body styling  */
body {
  position: relative;
  max-width: 99vw;
  min-height: 100vh;
  line-height: 1.5em;
  word-spacing: 1px;
  /* 
   The !important it ensures that the body has same properties 
   across all pages 
   */
  overflow-x: hidden !important;
  overflow-y: scroll !important;
  display: grid;
  place-self: center;
  place-content: center;
  place-items: center;
  grid-template-columns: 100%;
  justify-content: center;
  background: var(--backgroundColor);
  background-attachment: fixed;
  font-family: var(--primaryFont);
}

/* 
    // Scroll bar
    */

::-webkit-scrollbar {
  width: 8px;
  background-color: var(--backgroundColor);
}

::-webkit-scrollbar-thumb {
  background-color: var(--primaryColor);
  border: var(--backgroundColor) 2px solid;
  border-radius: 5em;
}

::-webkit-scrollbar-thumb:hover {
  background-color: #365463;
  cursor: pointer;
}

/* list styling */
ul {
  list-style: none;
}

ul.linksList {
  display: contents; /* 'display: contents' is not supported by Internet Explorer. the above code is to support Internet Explorer*/
}

/* 
    *
    //font styling
    *
    */
h1,
h2,
h3,
h4 {
  margin: 0 0 0.25em 0;
  font-weight: 600;
  font-size: var(--TitleFontSize);
  color: var(--primaryColorLight);
  line-height: 2em;
}

p {
  font-size: var(--paragraphFontSize);
  font-family: var(--secondaryFont);
  line-height: 1.5em;
  font-weight: 100;
}

/* links styling  */
a {
  text-decoration: none;
  font-family: var(--secondaryFont);
  color: var(--primaryColorLight);
  letter-spacing: 1px;
  display: inline-block;
}

a[isCurrentPage="true"] {
  color: var(--tertiaryColor);
  transform: scale(1.15);
  font-weight: 900;
}

/* buttons */
a.button {
  font-family: var(--primaryFont);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1.25em 1.2em;
  font-size: var(--btnFontSize);
  height: calc(2.5vw + 2.5vh);
  transform: scale(0.8);
  transition: all 0.5s ease;
  transform-origin: bottom;
}

a.button:hover {
  transform: scale(0.95);
}

a.button > .btnSvgIcon {
  max-width: 40px;
  max-height: 40px;
  margin-left: 2rem;
}

/* primary button */

.PrimaryBtn {
  --_primaryBtnColor: var(--primaryColorLight);
  background-color: var(--primaryColor);
  color: var(--_primaryBtnColor);
  border-radius: var(--btnBorderRadius);
}

.PrimaryBtn:hover {
  background-color: var(--primaryColorLight);
  --_primaryBtnColor: var(--primaryColor);
}

.PrimaryBtn > .btnSvgIcon {
  fill: var(--_primaryBtnColor);
}
.primaryColor {
  color: var(--primaryColor);
}

.secondaryColor {
  color: var(--tertiaryColor);
}
/* secondary button */
.SecondaryBtn {
  --_secondaryBtnColor: var(--tertiaryColor);
  --_borderDistance: -0.1rem;
  background-color: transparent;
  color: var(--_secondaryBtnColor);
  position: relative;
}

.SecondaryBtn:hover {
  --_secondaryBtnColor: var(--primaryColor);
}

.SecondaryBtn > .btnSvgIcon {
  fill: var(--_secondaryBtnColor);
}

.SecondaryBtn::after {
  content: "";
  position: absolute;
  top: var(--_borderDistance);
  right: var(--_borderDistance);
  z-index: -1;
  width: 70%;
  height: 100%;
  border: 5px solid var(--_secondaryBtnColor);
  border-left: none;
  border-bottom: none;
  border-radius: var(--btnBorderRadius);
  border-bottom-right-radius: 0;
  border-top-left-radius: 0;
}

.SecondaryBtn::before {
  content: "";
  position: absolute;
  bottom: var(--_borderDistance);
  left: var(--_borderDistance);
  z-index: -1;
  width: 70%;
  height: 100%;
  border: 5px solid var(--_secondaryBtnColor);
  border-top: none;
  border-right: none;
  border-radius: var(--btnBorderRadius);
  border-bottom-right-radius: 0;
  border-top-left-radius: 0;
}

/* image sizing */
img {
  max-width: 100%;
  object-fit: cover; /* is not supported by Internet Explorer. but it can be arranged using height and width */
  aspect-ratio: 16 / 9; /* is not supported by Internet Explorer, Safari < 15, Safari on iOS < 15  arranged using height and width */
}

/* 
    skip navigation bar
*/

.SkipNav {
  position: absolute;
  top: 0em;
  left: 0.25em;
  transform: translateY(-100%);
  color: var(--primaryColorLight);
  border: 2px solid;
  z-index: 9999;
  padding: 0 0.5em;
  cursor: pointer;
}

.SkipNav:hover {
  transition: all 0.2s ease-out;
  color: var(--primaryColor);
  padding: 0.2em 0.7em;
}

.SkipNav:focus {
  transform: translateY(0%);
  transition: all 0.5s ease-in;
}

/* custom alert */
.notificationCenter {
  min-height: 10vh;
  display: grid;
  grid-template-rows: repeat(auto-fill, 150px);
  align-items: center;
  justify-content: center;
  align-content: space-around;
  width: 30vw;
  position: fixed;
  bottom: 0;
  right: 0;
  z-index: 999;
  transition: all 0.5s ease-in-out;
  transform: translate(100%);
}
.customAlert {
  position: relative;
  margin: 0.2rem 0;
  padding: 1.5em 2em;
  display: grid;
  gap: 0.5em 0;
  align-items: center;
  justify-content: center;
  background-color: var(--primaryCardColor);
  color: var(--primaryColorLight);
  border-radius: var(--cardBorderRadius);
  animation: slideUp 0.5s ease-in both;
  z-index: 999999;
}

.closeBtn {
  position: absolute;
  top: 0.75em;
  right: 0.75em;
  max-width: 15px;
  max-height: 15px;
  fill: var(--secondaryColor);
  cursor: pointer;
  transition: var(--transition-5ms-Ease);
}
.closeBtn:hover {
  fill: var(--tertiaryColor);
  transform: scale(1.1);
}

.customAlertLink {
  position: relative;
  font-size: var(--paragraphFontSize);
  color: var(--tertiaryColor);
  font-weight: 900;
  font-family: var(--secondaryFont);
  transform-origin: left center;
  transition: var(--transition-5ms-Ease);
}

.customAlertLink[notVisible="false"]::after {
  content: "â†’";
  transform: scale(1.5);
  margin-left: 0.2em;
}

.customAlertLink:hover {
  transform: scale(1.1);
  color: var(--primaryColor);
}

.customAlertLink[notVisible="true"]::after {
  display: none;
}
/* 
  *
  *
  **-**|======|**|===> Header content starts here <===|**-**|======|**-**
  *
  *
  */

header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 10vh;
  display: flex;
  align-items: center;
  justify-content: space-around;
  z-index: 9999;
  background: var(--backgroundColor);
}

header[isInteracting="true"] {
  height: 10vh;
}

header[searchBar="true"] {
  justify-content: center;
  gap: 10%;
}

/* Logo */
.logoParent {
  height: 90%;
  width: 10%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transform: scale(0.9);
  transition: var(--transition-5ms-Ease);
  z-index: 12;
}

.logoParent:hover {
  transform: scale(1);
}

.mainLogo {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

/* menu toggle button */

.navButton {
  --_lineColor: var(--primaryColorLight);
  width: 5rem;
  height: 4rem;
  display: grid;
  place-items: center;
  place-self: center;
  align-content: space-around;
  cursor: pointer;
  transition: var(--transition-5ms-Ease);
  display: none;
}

.navButton:hover {
  transform: scale(1.1);
  --_lineColor: var(--primaryColor);
}

.line {
  width: 90%;
  height: 0.25rem;
  background-color: var(--_lineColor, #f1ffff);
  z-index: 2;
  border-radius: 2.5rem;
  pointer-events: none;
  transition: var(--transition-5ms-Ease);
}

.navButton:hover .LineNumOne {
  transform: translateX(15%);
}

.navButton:hover .LineNumThree {
  transform: translateX(-15%);
}

/* search bar */
.searchBar {
  width: 15%;
  height: 50%;
  border-radius: var(--searchBarBorderRadius);
  overflow: hidden;
  position: relative;
  background-color: transparent;
}

.searchBarInput {
  width: 100%;
  height: 100%;
  padding: 0.1rem 1rem;
  font-size: var(--navFontSize);
  background-color: var(--primaryCardColor);
}

.searchSubmitButton {
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 20%;
  background-color: var(--tertiaryColor);
  cursor: pointer;
  display: grid;
  align-items: center;
  justify-items: center;
}

.searchBarIcon {
  width: min(30px, 80%);
  height: min(30px, 60%);
  padding: 0.1rem;
  fill: var(--backgroundColor);
}

.searchBar[isIntersecting="false"] {
  position: fixed;
  top: 55%;
  left: 50%;
  transform: translate(-50%, -55%);
  width: 50vw;
  height: 8vh;
  box-shadow: 0 0 5em 0.1rem var(--primaryColorDark);
}

.searchBar[isIntersecting="false"] .searchSubmitButton {
  width: 10%;
}

/* navigation bar */
.mainNav {
  display: flex;
  align-items: center;
  justify-content: space-around;
  width: 40%;
}

/* on mobile and tablet screen */
.mainNav[isToggled="true"] {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh !important ;
  width: 100vw !important;
  background-color: var(--primaryCardColor);
  align-content: center;
  gap: 5rem;
  display: grid !important;
}
.pageLink {
  font-size: var(--navFontSize);
  transform: scale(0.95);
  transform-origin: bottom;
  transition: var(--transition-5ms-Ease);
  font-weight: 300;
}
.pageLink:hover {
  transform: scale(1.15);
  color: var(--tertiaryColor);
  font-weight: bolder;
}

dropDownMenu {
  transform: translate(100%, 10%);
  position: relative;
}

.userAvatar {
  height: 70px;
  width: 70px;
  transform: translateY(10%);
  border-radius: 50%;
  cursor: pointer;
}

#userName {
  font-size: calc(var(--btnFontSize) - 0.25rem);
  font-weight: bolder;
  font-family: var(--tertiaryFontExtra);
  color: var(--primaryColor);
  position: relative;
  margin-bottom: 1.5em;
}

#userName::after {
  position: absolute;
  content: "";
  height: 5px;
  width: 95%;
  bottom: -0.75em;
  left: 0.1em;
  background-color: var(--primaryColor);
  border-radius: 2.5rem;
}

.dropDownList {
  position: absolute;
  display: grid;
  background-color: var(--primaryCardColor);
  top: 100%;
  left: 0;
  height: 50vh;
  width: 12.5vw;
  justify-content: center;
  align-items: center;
  align-content: space-around;
  padding: 1em 0;
  border-radius: var(--cardBorderRadius);
  transform: scale(0) translate(-35%, -100%);
  transform-origin: top top;
  opacity: 0;
  transition: var(--transition-5ms-Ease);
}

.dropDownLinkParent {
  width: 110% !important;
}

.dropDownLink {
  display: flex;
  align-items: center;
  gap: 10%;
  align-content: center;
  width: 100%;
  color: var(--primaryColorLight) !important;
}

.dropDownSvgIcon {
  max-width: 25px;
  max-height: 25px;
  fill: var(--primaryColor);
}

.SwitchModes {
  display: grid;
  align-items: center;
  justify-content: center;
  transition: all 0.5s ease;
}
.themeIcon {
  max-width: 70px;
  max-height: 70px;
  cursor: pointer;
  transition: all 0.5s ease;
}
.SwitchModes[currentMode="Dark"] .DarkMode {
  display: block;
  fill: #3777d6;
}
.DarkMode:hover {
  fill: #d6a318 !important;
}
.LightMode:hover {
  fill: #212f44 !important;
  stroke: #212f44 !important;
}
.SwitchModes[currentMode="Light"] .DarkMode {
  display: none;
}

.SwitchModes[currentMode="Light"] .LightMode {
  display: block;
  fill: #c0820f;
  stroke: #c0820f;
}
.SwitchModes[currentMode="Dark"] .LightMode {
  display: none;
}

.themeIcon:hover {
  animation: rotate-right 0.85s ease-in-out both;
}
.Mode {
  stroke: var(--primaryColor);
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.SwitchModes {
  cursor: pointer;
}

dropDownMenu[aria-expanded="true"] .dropDownList {
  transform: translate(-35%, 1%) scale(1);
  opacity: 1;
}

/* main content */

/* hero Section */
.backgroundEffect {
  position: fixed;
  top: 8vh;
  left: 0;
  width: max(100%, 100vw);
  height: 90vh;
  font-size: calc(5rem + 100% + 10vw + 12.5vh);
  line-height: 1;
  letter-spacing: 5px;
  z-index: -1000;
  color: var(--primaryColorLight);
  opacity: 0.05;
}

.heroSection {
  height: 100vh;
  display: grid;
  position: relative;
  margin-bottom: 2em;
}

.heroSectionImage {
  object-fit: contain;
  /* setting the image point event's to none because it's over the title 
  but it's not shown because of object fit makes white space around it to make sure 
  that all image are shown   */
  pointer-events: none;
}
.heroSectionImage.Head {
  position: absolute;
  height: 90%;
  width: 100%;
  right: 0;
  bottom: 0;
  z-index: 0;
}

.heroSectionTitle {
  text-align: left;
  z-index: 2;
  letter-spacing: 2px;
}

.articleArea {
  width: 70%;
  max-height: 100%;
  display: grid;
  align-items: center;
  align-content: center;
  justify-content: left;
  text-align: left;
  gap: 0.5rem 0;
  transform: translate(5%, -5%);
}

.galleryHeroSectionTitle {
  font-size: calc(var(--heroSectionTitle) + 10%);
  line-height: 1.5;
  position: relative;
}

.galleryHeroSectionTitle::before {
  content: "";
  position: absolute;
  top: 1rem;
  left: -1.4rem;
  height: 80%;
  width: 7.5px;
  border-radius: 2.5rem;
  background-color: var(--tertiaryColor);
}

.descriptionParagraph {
  font-size: var(--calcFontSize);
  color: var(--labelColor);
}

.heroSectionTitle.Head {
  font-size: calc(var(--heroSectionTitle) + 2rem);
  line-height: 1.2;
  position: absolute;
  top: 20%;
  left: 2%;
}

/* books continuer */

main {
  display: grid;
  align-items: center;
  justify-content: center;
  justify-self: center;
  padding: 1em;
}
.mainContent {
  padding: 0 0.5em;
  align-items: center;
  justify-content: center;
}

.subContent {
  display: grid;
  place-items: center;
  place-content: center;
  place-self: center;
}

footer {
  width: 100vw;
  min-height: 100vh;
  display: grid;
  grid-template-columns: 10% 10% 20% 10% 40% 10%;
  grid-template-rows: 60% 30% 10%;
  justify-content: center;
  align-items: center;
  position: relative;
  margin-top: 5em;
}

.heroSection.Footer {
  grid-column: 1 / span 5;
  grid-row: 1;
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 3;
  display: grid;
  place-self: center;
  place-items: center;
  place-content: center;
}

.upperSideHeroSection {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-around;
  align-content: center;
  place-self: center;
  padding: 0em 2em;
  gap: 2rem;
}

.heroSectionImage.Footer {
  max-height: var(--imageMaxHeight);
  max-width: var(--imageMaxWidth);
  position: absolute;
  right: 2em;
  bottom: 1em;
  z-index: 2;
}

.heroSectionTitle.Footer {
  font-size: calc(var(--heroSectionTitle));
  line-height: 1.3;
  position: absolute;
  top: 1em;
  left: 2em;
}

.floorShape {
  width: 100vw;
  fill: var(--primaryColor) !important;
  transform: scale(1.5) translate(0%, 0%);
  z-index: -1;
  position: absolute;
  bottom: 0;
}

/* bottom footer */
.backgroundColor {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 50%;
  background-color: var(--customBackgroundColorDarkMode);
  z-index: -10;
}

.footerLogo {
  -ms-grid-column: 2 / span 3;
  grid-column: 2 / span 3;
  -ms-grid-row: 2;
  grid-row: 2 / span 3;
  height: 55%;
  width: 100%;
  object-fit: contain;
  transform: translate(-10%, -10%);
}

.callActionButtons {
  -ms-grid-column: 5;
  grid-column: 5;
  -ms-grid-row: 2;
  grid-row: 2;
  display: flex;
  gap: 2em;
  padding: 2em;
  transform: translate(10%, 40%);
}

.plane {
  transition: transform 0.5s ease-in-out;
}

.PrimaryBtn:hover > .plane {
  transform: translate(10%, -20%);
}

.socialLinksAside {
  -ms-grid-column: 1;
  grid-column: 1;
  -ms-grid-row: 2;
  grid-row: 2;
  width: max(5vw, 5%);
  height: 120%;
  transform: translateY(15%);
  display: grid;
  justify-content: center;
  align-content: space-around;
}

.socialIconsSVGs {
  fill: var(--primaryColor);
  max-width: 25px;
  max-height: 25px;
  transform: scale(1) rotate(-90deg);
  transition: var(--transition-5ms-Ease);
}

.socialIconsSVGs:hover {
  transform: scale(1.3) rotate(0deg);
  fill: var(--tertiaryColor);
}

.copyRight {
  -ms-grid-column: 1 / span 5;
  grid-column: 1 / span 5;
  -ms-grid-row: 3;
  grid-row: 3;
  width: 100%;
  height: 50%;
  text-align: center;
  margin-top: 2.5em;
  font-size: var(--paragraphFontSize);
  color: var(--primaryColorLight);
}

.author {
  font-size: calc(var(--paragraphFontSize) + 0.25rem);
  font-weight: bolder;
  color: var(--primaryColor);
  position: relative;
}

.author::after {
  content: attr(authorName);
  position: absolute;
  width: 150px;
  padding: 0.5rem 0;
  left: -115%;
  top: -160%;
  font-size: 1rem;
  background-color: var(--primaryColor);
  color: var(--primaryColorLight);
  border-radius: var(--cardBorderRadius);
  transform: translateY(100%) scale(0);
  opacity: 0;
  transition: var(--transition-5ms-Ease);
  font-family: var(--tertiaryFontExtra);
}

.author:hover::after {
  transform: translateY(0%) scale(1);
  opacity: 1;
}

/* 
 the above code is for 4k screens or screens that is larger than 1620
 i did not start from a mobile view because all my code is a flued design and i am setting a break point 
 where an object run out of space issues 
 */

@media only screen and (min-width: 1700px) {
  .floorShape {
    transform: translate(15%, 10%) scale(1.6) !important;
  }
}

/* laptop screen size */
@media only screen and (max-width: 1400px) {
  /*   .floorShape {
    transform: scale(1.15) translate(-5%, 17.5%);
  } */
  .heroSectionTitle {
    font-size: calc(var(--heroSectionTitle) + 0.75rem);
  }
}

@media only screen and (max-width: 800px) {
  .userAvatar {
    display: none;
  }
  .searchBar {
    display: none;
  }
  .mainNav {
    display: none;
  }
  .mainNav[isToggled="true"] {
    display: grid;
  }
  .navButton {
    display: grid;
    position: absolute;
    right: 2em;
  }
  .pageLink {
    font-size: calc(var(--subTitleFontSize) + 0.5rem);
  }
  .pageLink[animation="true"] {
    transform: translate(500%);
    animation-fill-mode: forwards;
  }
  .logoParent {
    width: 200px;
    height: 80%;
    position: absolute;
    left: 0;
  }
}

/* @supports selector() {

}
@when supports(selector()) {

} @else {

} 

ul.linksList, ul.aboutBookList {
  display: flex;
  align-items: center;
  justify-content: space-around;
}

*/

@keyframes slideUp {
  0% {
    opacity: 0;
    transform: translateX(100%) translateY(-100%);
  }
  100% {
    opacity: 1;
    transform: translateX(-170%) translateY(100%);
  }
}

@keyframes slideOut {
  0% {
    opacity: 1;
    transform: translate(-100, 100%);
  }
  100% {
    opacity: 0;
    transform: translate(100%, 100%);
  }
}

use {
  pointer-events: none;
}
.globalData {
  position: absolute;
  transform: translate(-25555555555555%, -2555555555555%);
}

@keyframes rotate-right {
  0% {
    transform: rotate(0) scale(1.05);
    transform-origin: center;
  }
  50% {
    transform: rotate(210deg) scale(1.1);
  }
  100% {
    transform: scale(1) rotate(360deg);
    transform-origin: center;
  }
}

@keyframes navLinksFadeAnim {
  from {
    transform: translateX(500%);
    opacity: 0;
  }
  to {
    transform: translateX(0%);
    opacity: 1;
  }
}
